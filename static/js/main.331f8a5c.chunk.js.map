{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Title.js","Components/Photo.js","Components/PhotoWall.js","Components/AddPhoto.js","database/config.js","redux/actions.js","Components/Comments.js","Components/Single.js","Components/Main.js","Components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","state","_posts","action","type","slice","index","post","comments","postId","comment","Component","Photo","props","className","to","id","src","imageLink","alt","description","onClick","startRemovingPost","history","push","length","Photowall","sort","x","y","map","key","AddPhoto","handleSubmit","bind","event","preventDefault","target","elements","link","value","Number","Date","this","startAddingPost","onHistory","onSubmit","placeholder","name","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","then","addPost","catch","error","console","log","startLoadingPost","once","snapshot","forEach","childSnapshot","val","loadPosts","remove","removePost","startAddingComment","addComment","startLoadingComments","Object","values","loadComments","Comments","hidden","Single","match","params","find","findIndex","loading","Main","setState","exact","path","render","App","withRouter","connect","bindActionCreators","actions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"otBAGeA,EAFD,GC4Bd,IAEeC,EAFKC,YAAgB,CAACF,MATrC,WAAwC,IAAzBG,EAAwB,uDAAhBC,EAAQC,EAAQ,uCACnC,OAAQA,EAAOC,MACX,IAAK,cAAe,MAAM,GAAN,mBAAWH,EAAMI,MAAM,EAAGF,EAAOG,QAAjC,YAA4CL,EAAMI,MAAMF,EAAOG,MAAQ,KAC3F,IAAK,WAAY,MAAM,GAAN,mBAAWL,GAAX,CAAkBE,EAAOI,OAC1C,IAAK,aAAc,OAAOJ,EAAOL,MACjC,QAAS,OAAOG,IAIoBO,SA1B5C,WAAqC,IAAnBP,EAAkB,uDAAZ,GAAIE,EAAQ,uCAChC,OAAQA,EAAOC,MACX,IAAK,cAED,OAAKH,EAAME,EAAOM,QAGP,2BAAIR,GAAX,kBAAmBE,EAAOM,OAA1B,sBAAuCR,EAAME,EAAOM,SAApD,CAA6DN,EAAOO,YAF7D,2BAAIT,GAAX,kBAAmBE,EAAOM,OAAS,CAACN,EAAOO,WAK/C,IAAK,gBAAiB,OAAOP,EAAOK,SAExC,QAAS,OAAOP,EAEpB,OAAOA,K,uCCfSU,YC0BLC,MAxBf,SAAeC,GACX,IAAMN,EAAOM,EAAMN,KACnB,OAAO,4BAAQO,UAAU,UACjB,kBAAC,IAAD,CAAMC,GAAE,kBAAaR,EAAKS,KAA1B,IAAiC,yBAAKF,UAAW,QAAQG,IAAKV,EAAKW,UAAWC,IAAKZ,EAAKa,eACpF,oCAAY,+BAAKb,EAAKa,YAAV,MACZ,yBAAKN,UAAU,oBACf,4BAAQO,QAAW,WACfR,EAAMS,kBAAkBT,EAAMP,MAAOC,EAAKS,IAC1CH,EAAMU,QAAQC,KAAK,OAFvB,UAIA,kBAAC,IAAD,CAAMV,UAAU,SAASC,GAAE,kBAAaR,EAAKS,KACzC,yBAAKF,UAAU,iBACX,yBAAKA,UAAU,iBAAf,KACCD,EAAML,SAASD,EAAKS,IAAMH,EAAML,SAASD,EAAKS,IAAIS,OAAS,OCcrEC,MAjBf,SAAmBb,GACf,OAAO,6BACH,kBAAC,IAAD,CAAMC,UAAU,UAAUC,GAAG,cAC7B,yBAAKD,UAAU,aACVD,EAAMf,MACN6B,MAAK,SAASC,EAAEC,GACb,OAAOA,EAAEb,GAAKY,EAAEZ,MAEnBc,KAAI,SAACvB,EAAMD,GAAP,OAAiB,kBAAC,EAAD,eAAOyB,IAAKzB,EAAOC,KAAMA,GAAUM,EAAnC,CAA0CP,MAAOA,W,QCgBpE0B,E,kDAnCX,aAAe,IAAD,8BACV,gBACKC,aAAe,EAAKA,aAAaC,KAAlB,gBAFV,E,yDAKDC,GACTA,EAAMC,iBACN,IAAMlB,EAAYiB,EAAME,OAAOC,SAASC,KAAKC,MACvCpB,EAAce,EAAME,OAAOC,SAASlB,YAAYoB,MAChDjC,EAAO,CACTS,GAAIyB,OAAO,IAAIC,MACftB,YAAaA,EACbF,UAAWA,GAEXE,GAAeF,IACfyB,KAAK9B,MAAM+B,gBAAgBrC,GAC3BoC,KAAK9B,MAAMgC,UAAUrB,KAAK,Q,+BAK9B,OACA,6BACI,yBAAKV,UAAU,QACX,0BAAMgC,SAAUH,KAAKV,cACjB,2BAAO7B,KAAM,OAAO2C,YAAY,OAAOC,KAAK,SAC5C,2BAAO5C,KAAM,OAAO2C,YAAY,cAAcC,KAAK,gBACnD,+C,GA5BGrC,a,QCUrBsC,gBAXmB,CACjBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjB,IAAMC,EAAWT,aCZZ,SAASL,EAAiBrC,GAC7B,OAAO,SAACoD,GACJ,OAAOD,EAASE,IAAI,SAASC,OAAtB,eAA+BtD,EAAKS,GAAKT,IAAOuD,MAAK,WACxDH,EAASI,EAAQxD,OAClByD,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAKjB,SAASG,IACZ,OAAO,SAACT,GACJ,OAAOD,EAASE,IAAI,SAASS,KAAK,SAASP,MAAK,SAACQ,GAC7C,IAAIxE,EAAQ,GACZwE,EAASC,SAAQ,SAACC,GACd1E,EAAM0B,KAAKgD,EAAcC,UAE7Bd,EAASe,EAAU5E,OACpBkE,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAKjB,SAAS3C,EAAkBhB,EAAOU,GACrC,OAAO,SAAC2C,GACJ,OAAOD,EAASE,IAAT,gBAAsB5C,IAAM2D,SAASb,MAAK,WAC7CH,EAASiB,EAAWtE,OACrB0D,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAKjB,SAASY,EAAmBnE,EAASD,GACxC,OAAO,SAACkD,GACJ,OAAOD,EAASE,IAAI,YAAYnD,GAAQe,KAAKd,GAASoD,MAAK,WACvDH,EAASmB,EAAWpE,EAASD,OAC9BuD,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAKjB,SAASc,IACZ,OAAO,SAACpB,GACJ,OAAOD,EAASE,IAAI,YAAYS,KAAK,SAASP,MAAK,SAACQ,GAChD,IAAI9D,EAAW,GACf8D,EAASC,SAAQ,SAACC,GACdhE,EAASgE,EAAczC,KAAOiD,OAAOC,OAAOT,EAAcC,UAE9Dd,EAASuB,EAAa1E,QAK3B,SAAS0E,EAAa1E,GACzB,MAAO,CACHJ,KAAM,iBACNI,YAID,SAASoE,EAAWtE,GACvB,MAAO,CACHF,KAAM,cACNE,SAID,SAASyD,EAAQxD,GACpB,MAAO,CACHH,KAAM,WACNG,QAID,SAASuE,EAAWpE,EAASD,GAChC,MAAO,CACHL,KAAM,cACNM,UACAD,UAID,SAASiE,EAAU5E,GACtB,MAAO,CACHM,KAAM,aACNN,S,ICzDOqF,E,kDA7BX,aAAe,IAAD,8BACV,gBACKlD,aAAe,EAAKA,aAAaC,KAAlB,gBAFV,E,yDAKDC,GACTA,EAAMC,iBACN,IAAM1B,EAAUyB,EAAME,OAAOC,SAAS5B,QAAQ8B,MAC9CG,KAAK9B,MAAMgE,mBAAmBnE,EAASiC,KAAK9B,MAAMG,IAClDmB,EAAME,OAAOC,SAAS5B,QAAQ8B,MAAO,K,+BAIrC,OAAO,yBAAK1B,UAAU,WAEd6B,KAAK9B,MAAML,SAASsB,KAAI,SAACpB,EAASJ,GAC9B,OACA,uBAAGyB,IAAKzB,GAAQI,MAIxB,0BAAMI,UAAU,eAAegC,SAAUH,KAAKV,cAC1C,2BAAO7B,KAAK,OAAO2C,YAAY,UAAUC,KAAK,YAC9C,2BAAO5C,KAAK,SAASgF,QAAM,U,GAzBpBzE,aCsBR0E,E,uKAnBD,IAAD,EACkB1C,KAAK9B,MAArByE,EADF,EACEA,MAAOxF,EADT,EACSA,MACRkB,EAAKyB,OAAO6C,EAAMC,OAAOvE,IACzBT,EAAOT,EAAM0F,MAAK,SAACjF,GAAD,OAAUA,EAAKS,KAAKA,KACtCR,EAAWmC,KAAK9B,MAAML,SAAS8E,EAAMC,OAAOvE,KAAO,GACnDV,EAAQqC,KAAK9B,MAAMf,MAAM2F,WAAU,SAAClF,GAAD,OAAUA,EAAKS,KAAOA,KAC/D,OAAyB,IAArB2B,KAAK9B,MAAM6E,QACJ,yBAAK5E,UAAU,UAAf,cACAP,EACJ,yBAAKO,UAAU,gBAClB,kBAAC,EAAD,eAAOP,KAAMA,GAAUoC,KAAK9B,MAA5B,CAAmCP,MAAOA,KAC1C,kBAAC,EAAD,CAAUuE,mBAAoBlC,KAAK9B,MAAMgE,mBAAoBrE,SAAUA,EAAUQ,GAAMA,KAGhF,iD,GAfEL,aC0CNgF,E,kDAzBX,aAAe,IAAD,8BACV,gBAVJ1F,MAAQ,CAAEyF,SAAS,GASL,E,gEAPO,IAAD,OAChB/C,KAAK9B,MAAMuD,mBAAmBN,MAAK,WAC/B,EAAK8B,SAAS,CAACF,SAAS,OAE5B/C,KAAK9B,MAAMkE,2B,8CAOL,IAAD,OACL,OAAQ,6BACI,4BACI,kBAAC,IAAD,CAAMhE,GAAG,KAAT,cAEJ,kBAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC1B,6BACI,kBAAC,EAAc,EAAKlF,WAG5B,kBAAC,IAAD,CAAOiF,KAAK,YAAYC,OAAQ,gBAAExE,EAAF,EAAEA,QAAF,OAC5B,kBAAC,EAAD,iBAAc,EAAKV,MAAnB,CAA0BgC,UAAWtB,QAEzC,kBAAC,IAAD,CAAOuE,KAAK,cAAcC,OAAQ,SAACR,GAAD,OAC9B,kBAAC,EAAD,eAAQG,QAAS,EAAKzF,MAAMyF,SAAa,EAAK7E,MAAW0E,Y,GA7B9D5E,aCOnB,IAEeqF,EAFHC,YAAWC,aAXvB,SAAyBjG,GACrB,MAAO,CACHH,MAAOG,EAAMH,MACbU,SAAUP,EAAMO,aAIxB,SAA4BmD,GACxB,OAAOwC,YAAmBC,EAASzC,KAGhBuC,CAA6CP,ICJ9DU,EAAQC,YAAYvG,EAAawG,OAAOC,8BAAgCD,OAAOC,+BAAgCC,YAAgBC,MAErIC,IAASZ,OAAO,kBAAC,IAAD,CAAUM,MAAOA,GAAO,kBAAC,IAAD,KAAe,kBAAC,EAAD,QAAmCO,SAASC,eAAe,U","file":"static/js/main.331f8a5c.chunk.js","sourcesContent":["\r\nconst posts = []\r\n\r\nexport default posts","import _posts from '../data/posts'\r\nimport {combineReducers} from 'redux'\r\n\r\nfunction comments(state={}, action) {\r\n    switch (action.type) {\r\n        case 'ADD_COMMENT':\r\n\r\n            if (!state[action.postId]) {\r\n                return {...state, [action.postId]: [action.comment]}\r\n            } else {\r\n                return {...state, [action.postId]: [...state[action.postId], action.comment]}\r\n            }\r\n\r\n            case 'LOAD_COMMENTS': return action.comments    \r\n\r\n        default: return state    \r\n    }\r\n    return state\r\n}\r\n\r\nfunction posts(state = _posts, action) {\r\n    switch (action.type) {\r\n        case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\r\n        case 'ADD_POST': return [...state, action.post]\r\n        case 'LOAD_POSTS': return action.posts\r\n        default: return state \r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({posts, comments})\r\n\r\nexport default rootReducer","import React, { Component } from 'react';\r\n\r\nclass Title extends Component {\r\n    render() {\r\n    return <h1> {this.props.title} </h1>\r\n    }\r\n}\r\n\r\nexport default Title","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Photo(props) {\r\n    const post = props.post\r\n    return <figure className=\"figure\">\r\n            <Link to={`/single/${post.id}`}> <img className= \"photo\" src={post.imageLink} alt={post.description}/></Link>\r\n                <figcaption><p> {post.description} </p></figcaption>\r\n                <div className='button-container'>\r\n                <button onClick = {() => {\r\n                    props.startRemovingPost(props.index, post.id)\r\n                    props.history.push('/')\r\n                }}>Remove</button>\r\n                <Link className=\"button\" to={`/single/${post.id}`}>\r\n                    <div className=\"comment-count\">\r\n                        <div className=\"speech-bubble\"> </div>\r\n                        {props.comments[post.id] ? props.comments[post.id].length : 0}\r\n                    </div>\r\n                </Link>\r\n                </div>\r\n            </figure>\r\n}\r\n\r\nPhoto.propTypes = {\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Photo","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Photo from './Photo';\r\n\r\n// class Photowall extends Component {\r\n//     render() {\r\n//         return <div className=\"photoGrid\">\r\n//             {this.props.posts.map((post, index) => <Photo key={index} post={post} onRemovePhoto={props.onRemovePhoto}/>)}\r\n//         </div>\r\n//     }\r\n// }\r\n\r\nfunction Photowall(props) {\r\n    return <div>\r\n        <Link className=\"addIcon\" to=\"/AddPhoto\"></Link>\r\n        <div className=\"photoGrid\">\r\n            {props.posts\r\n            .sort(function(x,y) {\r\n                return y.id - x.id\r\n            })\r\n            .map((post, index) => <Photo key={index} post={post} {...props} index={index}/>)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nPhotowall.propTypes = {\r\n    posts: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Photowall","import React, { Component } from 'react';\r\n\r\nclass AddPhoto extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const imageLink = event.target.elements.link.value\r\n        const description = event.target.elements.description.value\r\n        const post = {\r\n            id: Number(new Date()),\r\n            description: description,\r\n            imageLink: imageLink\r\n        }\r\n        if (description && imageLink) {\r\n            this.props.startAddingPost(post)\r\n            this.props.onHistory.push('/')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div className=\"form\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type =\"text\" placeholder=\"Link\" name=\"link\"/>\r\n                    <input type =\"text\" placeholder=\"Description\" name=\"description\"/>\r\n                    <button>Post</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPhoto","import * as firebase from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBEY7V58RTSvXmH335dINxW3IHorkwnbiU\",\r\n    authDomain: \"photowall-d332a.firebaseapp.com\",\r\n    databaseURL: \"https://photowall-d332a.firebaseio.com\",\r\n    projectId: \"photowall-d332a\",\r\n    storageBucket: \"photowall-d332a.appspot.com\",\r\n    messagingSenderId: \"404655324874\",\r\n    appId: \"1:404655324874:web:44772d329fab946149be33\",\r\n    measurementId: \"G-DY75N6NCKM\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const database = firebase.database()\r\n\r\n  export {database}","import {database} from '../database/config'\r\n\r\nexport function startAddingPost (post) {\r\n    return (dispatch) => {\r\n        return database.ref('posts').update({[post.id]: post}).then(() =>{\r\n            dispatch(addPost(post))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startLoadingPost() {\r\n    return (dispatch) => {\r\n        return database.ref('posts').once('value').then((snapshot) =>{\r\n            let posts = []\r\n            snapshot.forEach((childSnapshot) => {\r\n                posts.push(childSnapshot.val())\r\n            })\r\n            dispatch(loadPosts(posts))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startRemovingPost(index, id) {\r\n    return (dispatch) => {\r\n        return database.ref(`posts/${id}`).remove().then(() =>{\r\n            dispatch(removePost(index))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startAddingComment(comment, postId) {\r\n    return (dispatch) => {\r\n        return database.ref('comments/'+postId).push(comment).then(() => {\r\n            dispatch(addComment(comment, postId))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startLoadingComments() {\r\n    return (dispatch) => {\r\n        return database.ref('comments').once('value').then((snapshot) => {\r\n            let comments = {}\r\n            snapshot.forEach((childSnapshot) => {\r\n                comments[childSnapshot.key] = Object.values(childSnapshot.val())\r\n            })\r\n            dispatch(loadComments(comments))\r\n        })\r\n    }\r\n}\r\n\r\nexport function loadComments(comments) {\r\n    return {\r\n        type: 'LOAD_COMMETNTS',\r\n        comments\r\n    }\r\n}\r\n\r\nexport function removePost(index) {\r\n    return {\r\n        type: 'REMOVE_POST',\r\n        index\r\n    }\r\n}\r\n\r\nexport function addPost(post) {\r\n    return {\r\n        type: 'ADD_POST',\r\n        post\r\n    }\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n    return {\r\n        type: 'ADD_COMMENT',\r\n        comment,\r\n        postId\r\n    }\r\n}\r\n\r\nexport function loadPosts(posts) {\r\n    return {\r\n        type: 'LOAD_POSTS',\r\n        posts\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nclass Comments extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const comment = event.target.elements.comment.value\r\n        this.props.startAddingComment(comment, this.props.id)\r\n        event.target.elements.comment.value= ''\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"comment\">\r\n            {\r\n                this.props.comments.map((comment, index) => {\r\n                    return (\r\n                    <p key={index}>{comment}</p>\r\n                    )\r\n                })\r\n            }\r\n            <form className=\"comment-form\" onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"comment\" name=\"comment\"/>\r\n                <input type=\"submit\" hidden/>\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Comments","import React, { Component } from 'react'\r\nimport Comments from './Comments'\r\nimport Photo from './Photo'\r\n\r\nclass Single extends Component {\r\n    render() {\r\n        const {match, posts} = this.props\r\n        const id = Number(match.params.id)\r\n        const post = posts.find((post) => post.id===id)\r\n        const comments = this.props.comments[match.params.id] || []\r\n        const index = this.props.posts.findIndex((post) => post.id === id)\r\n        if (this.props.loading===true) {\r\n            return <div className=\"loader\">Loading...</div>\r\n        } else if (post) {\r\n        return <div className=\"single-photo\">\r\n            <Photo post={post} {...this.props} index={index}/>\r\n            <Comments startAddingComment={this.props.startAddingComment} comments={comments} id = {id}/>\r\n        </div>\r\n        } else {\r\n            return <h1>No post found</h1>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Single","import React, { Component } from 'react';\r\nimport {Link, Route} from 'react-router-dom';\r\n\r\nimport Title from './Title';\r\nimport Photowall from './PhotoWall';\r\nimport AddPhoto from './AddPhoto';\r\nimport { removePost } from '../redux/actions';\r\nimport Single from './Single';\r\n\r\n    \r\nclass Main extends Component {\r\n\r\n    state = { loading: true}\r\n\r\n    componentDidMount() {\r\n        this.props.startLoadingPost().then(()=> {\r\n            this.setState({loading: false})\r\n        })\r\n        this.props.startLoadingComments()\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n                    <h1>\r\n                        <Link to=\"/\">Photowall</Link>\r\n                    </h1>\r\n                    <Route exact path=\"/\" render={() => (\r\n                        <div>\r\n                            <Photowall {...this.props}/>\r\n                        </div>\r\n                    )}/>\r\n                    <Route path=\"/AddPhoto\" render={({history}) => (\r\n                        <AddPhoto {...this.props} onHistory={history}/>\r\n                    )}/>\r\n                    <Route path=\"/single/:id\" render={(params) => (\r\n                        <Single loading={this.state.loading} {...this.props} {...params} />\r\n                    )}/>\r\n               </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default Main","import {connect} from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport Main from './Main'\r\nimport * as actions from '../redux/actions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        posts: state.posts,\r\n        comments: state.comments\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(actions, dispatch)\r\n}\r\n\r\nconst App = withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { Provider } from 'react-redux';\nimport './styles/stylesheet.css';\n\nimport rootReducer from './redux/reducer';\nimport App from './Components/App';\nimport database from './database/config';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App/></BrowserRouter></Provider>, document.getElementById('root'));"],"sourceRoot":""}